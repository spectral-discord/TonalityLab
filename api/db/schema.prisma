datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  // Generated user data
  id              Int         @id @default(autoincrement())
  // apiToken        String      @unique @default(nanoid(15))
  apiToken        String      @unique @default(dbgenerated("nanoid(15)")) @db.VarChar(15)

  // Optional user data
  name            String?

  // TSON relations
  tunings         Tuning[]
  spectra         Spectrum[]
  sets            Set[]
}

model Tuning {
  // TonalityLab data
  // id              String      @id @default(nanoid(10))
  id              String      @id @default(dbgenerated("nanoid(10)")) @db.VarChar(10)
  author          User        @relation(fields: [authorId], references: [id])
  authorId        Int
  private          Boolean     @default(false)

  // TSON data
  name            String?
  description     String?
  tson            String

  // TSON relations
  sets            Set[]
  spectra         Spectrum[]

  // Timestamps
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  // Versioning relations
  // parent          Tuning?     @relation("Versions", fields: [parentId], references: [id])
  // parentId        String?
  // children        Tuning[]    @relation("Versions")
}

model Spectrum {
  // TonalityLab data
  // id              String      @id @default(nanoid(10))
  id              String      @id @default(dbgenerated("nanoid(10)")) @db.VarChar(10)
  author          User        @relation(fields: [authorId], references: [id])
  authorId        Int
  private          Boolean     @default(false)

  // TSON data
  name            String?
  description     String?
  tson            String

  // TSON relations
  sets            Set[]
  tunings         Tuning[]

  // Timestamps
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  // Versioning relations
  // parent          Spectrum?   @relation("Versions", fields: [parentId], references: [id])
  // parentId        String?
  // children        Spectrum[]  @relation("Versions")
}

model Set {
  // TonalityLab data
  // id              String      @id @default(nanoid(10))
  id              String      @id @default(dbgenerated("nanoid(10)")) @db.VarChar(10)
  author          User        @relation(fields: [authorId], references: [id])
  authorId        Int
  private          Boolean     @default(false)

  // TSON data
  name            String?
  description     String?
  tson            String

  // TSON relations
  spectra         Spectrum[]
  tunings         Tuning[]

  // Timestamps
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  // Versioning relations
  // parent          Set?        @relation("Versions", fields: [parentId], references: [id])
  // parentId        String?
  // children        Set[]       @relation("Versions")
}